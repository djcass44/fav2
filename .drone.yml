kind: pipeline
type: kubernetes
name: default

helm_deploy: &helm_deploy
  mode: upgrade
  wait_for_upgrade: true
  atomic: true
  cleanup_failed_upgrade: true
  reuse_values: true
  kube_api_server: https://kubernetes.default
  kube_certificate:
    from_secret: kube_certificate
  client_certificate_data:
    from_secret: client_certificate_data
  client_key_data:
    from_secret: client_key_data

steps:
  # BUILD OCI IMAGE
  - name: docker
    image: harbor.v2.dcas.dev/library/drone-kaniko
    settings:
      registry: harbor.v2.dcas.dev
      repo: dcas.dev/fav2
      tags:
        - latest
        - ${DRONE_BRANCH/\//-}
        - ${DRONE_COMMIT_SHA}
      authjson_docker:
        from_secret: DOCKER_AUTH
    # LINT HELM CHART
  - name: helm_lint
    image: harbor.v2.dcas.dev/djcass44/drone-helm3
    settings:
      mode: lint
      chart: ./fav-helm
    # DEPLOY TO DEV
  - name: deploy_development
    image: harbor.v2.dcas.dev/djcass44/drone-helm3
    depends_on:
      - helm_lint
      - docker
      - deploy_dev_redis
    settings:
      <<: *helm_deploy
      namespace: development
      release: fav2
      chart: ./fav-helm
      values:
        - ingress.enabled=true
        - ingress.host=icon-dev.v2.dcas.dev
        - image.tag=${DRONE_COMMIT_SHA}
        - spring.profile=development
        - persistence.storageClassName=nfs
    when:
      branch:
        exclude: master
  - name: deploy_dev_redis
    image: harbor.v2.dcas.dev/djcass44/drone-helm3
    settings:
      <<: *helm_deploy
      namespace: development
      add_repos: ["bitnami=https://charts.bitnami.com/bitnami"]
      release: fav2-redis
      chart: bitnami/redis
      values:
        - master.persistence.enabled=false
        - slave.persistence.enabled=false
        - usePassword=false
    when:
      branch:
        exclude: master
    # DEPLOY TO PROD
  - name: deploy_production
    image: harbor.v2.dcas.dev/djcass44/drone-helm3
    depends_on:
      - helm_lint
      - docker
      - deploy_prod_redis
    settings:
      <<: *helm_deploy
      namespace: production
      release: fav2
      chart: ./fav-helm
      values:
        - ingress.enabled=true
        - ingress.host=icon.v2.dcas.dev
        - image.tag=${DRONE_BRANCH}
        - spring.profile=production
        - persistence.storageClassName=nfs
        - replicas=2
    when:
      branch:
        - master
  - name: deploy_prod_redis
    image: harbor.v2.dcas.dev/djcass44/drone-helm3
    settings:
      <<: *helm_deploy
      namespace: production
      add_repos: ["bitnami=https://charts.bitnami.com/bitnami"]
      release: fav2-redis
      chart: bitnami/redis
      values:
        - master.persistence.storageClass=nfs
        - slave.persistence.storageClass=nfs
        - usePassword=false
    when:
      branch:
        exclude: master
trigger:
  when:
    event: push